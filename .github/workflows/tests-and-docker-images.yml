name: Test & publish Docker images

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - trigger-integration
    paths-ignore:
      - 'website/**'
    tags: ["*"]

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.head_ref || github.ref_name }}

jobs:

  not-missing-manifests:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    container: ghcr.io/cscetbon/casskop-build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache vendor modules
        uses: actions/cache@v2.1.7
        env:
          cache-name: casskop-vendor
        with:
          path: |
            vendor
            /go/pkg
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Download dependencies
        run: go mod download

      - name: Vendor dependencies
        run: go mod vendor

      - name: Generate k8s & crds
        run: |
          GO111MODULE=on go install github.com/mikefarah/yq/v4@latest
          make generate

      - name: Ensure there are no missing changes
        run: |
          [ "$(git ls-files -m | grep -cE 'zz_generated|crds')" -eq 0 ]

  unit-tests:
    runs-on: ubuntu-latest
    container: ghcr.io/cscetbon/casskop-build:v1.13.0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache vendor modules
        uses: actions/cache@v2.1.7
        env:
          cache-name: casskop-vendor
        with:
          path: |
            vendor
            /go/pkg
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            ${{ runner.os }}-

      - name: Run unit Tests
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        env:
          POD_NAME: test
          KUBERNETES_CONFIG: config/test-kube-config.yaml
        run: |
          go mod vendor
          go test -mod=vendor --cover --coverprofile=coverage.out `go list -mod=vendor ./... | grep -v e2e`
          go tool cover -html=coverage.out -o coverage.html

  docker-images:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    needs: unit-tests
    strategy:
      matrix:
        image: [casskop, multi-casskop]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1.14.1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          file: docker/${{ matrix.image }}/Dockerfile
          tags: ghcr.io/cscetbon/${{ matrix.image }}:${{ env.IMAGE }}
          push: ${{ env.IMAGE == 'master' }}

      - name: Tag Docker image as latest
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/build-push-action@v2.10.0
        with:
          context: .
          file: docker/${{ matrix.image }}/Dockerfile
          tags: ghcr.io/cscetbon/${{ matrix.image }}:latest
          push: true
