"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3470],{9624:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"configuration_deployment/cassandra_cluster_status","title":"CassandraCluster Status","description":"You can request kubernetes Object cassandracluster representing the Cassandra cluster to retrieve information about","source":"@site/docs/3_configuration_deployment/11_cassandra_cluster_status.md","sourceDirName":"3_configuration_deployment","slug":"/configuration_deployment/cassandra_cluster_status","permalink":"/casskop/docs/configuration_deployment/cassandra_cluster_status","draft":false,"unlisted":false,"editUrl":"https://github.com/cscetbon/casskop/edit/master/website/docs/3_configuration_deployment/11_cassandra_cluster_status.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"title":"CassandraCluster Status","sidebar_label":"CassandraCluster Status"},"sidebar":"docs","previous":{"title":"Nodes Management","permalink":"/casskop/docs/configuration_deployment/nodes_management"},"next":{"title":"Implementation architecture","permalink":"/casskop/docs/operations/implementation_architecture"}}');var a=s(4848),r=s(8453);const o={title:"CassandraCluster Status",sidebar_label:"CassandraCluster Status"},i=void 0,d={},c=[];function l(n){const e={blockquote:"blockquote",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:["You can request kubernetes Object ",(0,a.jsx)(e.code,{children:"cassandracluster"})," representing the Cassandra cluster to retrieve information about\nit's status :"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"$ kubectl describe cassandracluster cassandra\n...\nstatus:\n   Cassandra Node Status:\n     cassandra-demo-dc1-rack1-0:\n      Host Id:  ca716bef-dc68-427d-be27-b4eeede1e072\n      Node Ip:  10.100.150.51\n     cassandra-demo-dc1-rack1-1:\n      Host Id:  3528d662-e4a8-4fb6-88f6-3f21056df7ea\n      Node Ip:  10.100.150.39\n     cassandra-demo-dc1-rack1-2:\n      Host Id:  a1d1e7fa-8073-408c-94c1-e3678013f90f\n      Node Ip:  10.100.150.38\n     cassandra-demo-dc1-rack2-0:\n      Host Id:  83ea3410-db00-47fe-9051-e9f877ce5e63\n      Node Ip:  10.100.150.111\n     cassandra-demo-dc1-rack2-1:\n      Host Id:  200bf115-5caf-4218-8e84-e804296c5026\n      Node Ip:  10.100.150.108\n     cassandra-demo-dc1-rack2-2:\n      Host Id:  27ee7414-a695-4744-bf39-41db9d23ddb2\n      Node Ip:  10.100.150.110\n  cassandraRackStatus:\n    dc1-rack1:\n      cassandraLastAction:\n        Name: ScaleUp\n        endTime: 2018-07-12T14:10:28Z\n        startTime: 2018-07-12T14:09:34Z\n        status: Done\n      phase: Running\n      podLastOperation:\n        Name: cleanup\n        endTime: 2018-07-12T14:07:35Z\n        podsOK:\n        - cassandra-demo-dc1-rack1-0\n        - cassandra-demo-dc1-rack1-1\n        - cassandra-demo-dc1-rack1-2\n        startTime: 2018-07-12T14:06:22Z\n        status: Done\n    dc1-rack2:\n      cassandraLastAction:\n        Name: ScaleUp\n        endTime: 2018-07-12T14:10:58Z\n        startTime: 2018-07-12T14:10:28Z\n        status: Done\n      phase: Running\n      podLastOperation:\n        Name: cleanup\n        endTime: 2018-07-12T14:08:16Z\n        podsOK:\n        - cassandra-demo-dc1-rack2-0\n        - cassandra-demo-dc1-rack2-1\n        - cassandra-demo-dc1-rack2-2\n        startTime: 2018-07-12T14:08:09Z\n        status: Done\n  lastClusterAction: ScaleUp\n  lastClusterActionStatus: Done        \n...\n  phase: Running\n  seedlist:\n  - cassandra-demo-dc1-rack1-0.cassandra-demo-dc1-rack1.cassandra-demo.svc.kaas-prod-priv-sph\n"})}),"\n",(0,a.jsx)(e.p,{children:"The CassandraCluster prints out it's whole status."}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"seedlist"}),": it is the Cassandra SEED List used in the Cluster."]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Phase"})," : it's the global state for the cassandra cluster which can have different values :","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Initialization"}),", we just launched a new cluster, and waiting for its requested state"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Running"}),", the cluster is running normally"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Pending"}),", the number of Nodes requested has changed, waiting for reconciliation"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"lastClusterAction"})," Is the Last Action at the Cluster level"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"lastClusterActionStatus"})," Is the Last Action Status at the Cluster level"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"CassandraNodeStatus"}),": represents a map of (hostId, Ip Node) couple for each Pod in the Cluster","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"${Cassandra node pod's name}"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"HostId"}),": the cassandra node's hostId"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"IpNode"}),": the cassandra node's ip"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"CassandraRackStatus"})," represents a map of statuses for each of the Cassandra Racks in the Cluster","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"${Cassandra DC-Rack Name}"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Cassandra Last Action"}),": it's an action which is ongoing on the Cassandra cluster :","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Name"}),": name of the Action","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"UpdateConfigMap"})," a new ConfigMap has been submitted to the cluster"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"UpdateDockerImage"})," a new Docker Image has been submitted to the cluster"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"UpdateSeedList"})," a new SeedList must be deployed on the cluster"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"UpdateResources"})," CassKop must apply new resources values for it's statefulsets"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"RollingRestart"})," CassKop performs a rollingrestart on the target statefulset"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"ScaleUp"})," a scale Up has been requested"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"ScaleDown"})," a scale Down has been requested."]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"UpdateStatefulset"})," a change has been submitted to the statefulset, but CassKop doesn't know exactly\nwhich one."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Status"}),": status of the Action","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Configuring"}),": Only used for UpdateSeedList, we need to synchronise all statefulset with this operation before starting it"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"ToDo"}),": an action is scheduled"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Ongoing"}),": an action is ongoing, see Start Time"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Continue"}),": the action may be continuing (used for ScaleDown)"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Done"}),": the action is Done, see End Time"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Start Time"}),": time of start of the operation"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"End Time"}),": time of end of the operation"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Pod Last Operation"}),": it's an operation done at Pod Level","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Name"}),": Name of the Operation","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"decommissioning"}),": a nodetool decommissioning must be performed on a pod"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"cleanup"}),": a nodetool cleanup must be performed on a pod"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"rebuild"}),": a nodetool rebuild must be performed on a pod"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"upgradesstables"}),": a nodetool upgradesstables must be performed on a pod"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Status"}),":","\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Manual"}),": an operation is recommended to be scheduled by a human"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"ToDo"}),": an operation is scheduled"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Ongoing"}),": an operation is ongoing, see start time"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Done"}),": an operation is done, see end time"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Pods"}),": list of Pods on which the operation is ongoing"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"PodsOK"}),": list of Pods on which the operation is done"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"PodsKO"}),": list of Pods on which the operation has not been completed correctly"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Start Time"}),": time of start for an operation"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"End Time"}),": time of end for an operation"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"When Status=Done for each Rack, then there is no specific action ongoing on the cluster and the\nlastClusterActionStatus will turn also to Done."}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(l,{...n})}):l(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>o,x:()=>i});var t=s(6540);const a={},r=t.createContext(a);function o(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);