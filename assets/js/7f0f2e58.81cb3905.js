"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5497],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var s=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,s)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,s,n=function(e,t){if(null==e)return{};var a,s,n={},r=Object.keys(e);for(s=0;s<r.length;s++)a=r[s],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)a=r[s],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=s.createContext({}),u=function(e){var t=s.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return s.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(a),d=n,k=p["".concat(i,".").concat(d)]||p[d]||m[d]||r;return a?s.createElement(k,l(l({ref:t},c),{},{components:a})):s.createElement(k,l({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,l=new Array(r);l[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[p]="string"==typeof e?e:n,l[1]=o;for(var u=2;u<r;u++)l[u]=a[u];return s.createElement.apply(null,l)}return s.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>l});var s=a(7294),n=a(6010);const r={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return s.createElement("div",{role:"tabpanel",className:(0,n.Z)(r.tabItem,l),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>w});var s=a(7462),n=a(7294),r=a(6010),l=a(2466),o=a(6550),i=a(1980),u=a(7392),c=a(12);function p(e){return function(e){return n.Children.map(e,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:s,default:n}}=e;return{value:t,label:a,attributes:s,default:n}}))}function m(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:a}=e;const s=(0,o.k6)(),r=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(r),(0,n.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(s.location.search);t.set(r,e),s.replace({...s.location,search:t.toString()})}),[r,s])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:s}=e,r=m(e),[l,o]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=a.find((e=>e.default))??a[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:r}))),[i,u]=k({queryString:a,groupId:s}),[p,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,r]=(0,c.Nk)(a);return[s,(0,n.useCallback)((e=>{a&&r.set(e)}),[a,r])]}({groupId:s}),f=(()=>{const e=i??p;return d({value:e,tabValues:r})?e:null})();(0,n.useLayoutEffect)((()=>{f&&o(f)}),[f]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!d({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),h(e)}),[u,h,r]),tabValues:r}}var f=a(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:a,selectedValue:o,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),m=e=>{const t=e.currentTarget,a=c.indexOf(t),s=u[a].value;s!==o&&(p(t),i(s))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,s.Z)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:m},l,{className:(0,r.Z)("tabs__item",b.tabItem,l?.className,{"tabs__item--active":o===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:s}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===s));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==s}))))}function y(e){const t=h(e);return n.createElement("div",{className:(0,r.Z)("tabs-container",b.tabList)},n.createElement(g,(0,s.Z)({},e,t)),n.createElement(v,(0,s.Z)({},e,t)))}function w(e){const t=(0,f.Z)();return n.createElement(y,(0,s.Z)({key:String(t)},e))}},6073:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var s=a(7462),n=(a(7294),a(3905));a(4866),a(5162);const r={title:"Multi-CassKop",sidebar_label:"Multi-CassKop"},l=void 0,o={unversionedId:"setup/multi_casskop",id:"setup/multi_casskop",title:"Multi-CassKop",description:"MultiCasskop",source:"@site/docs/2_setup/3_multi_casskop.md",sourceDirName:"2_setup",slug:"/setup/multi_casskop",permalink:"/casskop/docs/setup/multi_casskop",draft:!1,editUrl:"https://github.com/cscetbon/casskop/edit/master/website/docs/2_setup/3_multi_casskop.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Multi-CassKop",sidebar_label:"Multi-CassKop"},sidebar:"docs",previous:{title:"Install Plugin",permalink:"/casskop/docs/setup/install_plugin"},next:{title:"Google Kubernetes Engine",permalink:"/casskop/docs/setup/platform_setup/gke"}},i={},u=[{value:"MultiCasskop",id:"multicasskop",level:2},{value:"Pre-requisite",id:"pre-requisite",level:3},{value:"Bootstrap API access to k8s-cluster-2 from k8s-cluster-1",id:"bootstrap-api-access-to-k8s-cluster-2-from-k8s-cluster-1",level:4},{value:"Install CassKop",id:"install-casskop",level:4},{value:"Install External-DNS",id:"install-external-dns",level:3},{value:"Install Multi-CassKop",id:"install-multi-casskop",level:3},{value:"Create the MultiCassKop CRD",id:"create-the-multicasskop-crd",level:3}],c={toc:u},p="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,s.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"multicasskop"},"MultiCasskop"),(0,n.kt)("h3",{id:"pre-requisite"},"Pre-requisite"),(0,n.kt)("p",null,"In order to have a working Multi-CassKop operator we need to have at least 2 k8s clusters: k8s-cluster-1 and k8s-cluster-2"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"k8s >=v1.15 installed on each site, with kubectl configure to access both of thems"),(0,n.kt)("li",{parentName:"ul"},"The pods of each site must be able to reach pods on other sites, this is outside of the scope of Multi-Casskop and can\nbe achieve by different solutions such as:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"in our on-premise cluster, we leverage ",(0,n.kt)("a",{parentName:"li",href:"https://www.projectcalico.org/why-bgp/"},"Calico")," routable IP pool in order to make this possible"),(0,n.kt)("li",{parentName:"ul"},"this can also be done using mesh service such as istio"),(0,n.kt)("li",{parentName:"ul"},"there may be other solutions as well"))),(0,n.kt)("li",{parentName:"ul"},"having CassKop installed (with its ConfigMap) in each namespace see ",(0,n.kt)("a",{parentName:"li",href:"#casskop"},"CassKop installation")),(0,n.kt)("li",{parentName:"ul"},"having ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/kubernetes-sigs/external-dns"},"External-DNS")," with RFC2136 installed in each namespace to\nmanage your DNS sub zone. see ",(0,n.kt)("a",{parentName:"li",href:"#install-external-dns"},"Install external dns")),(0,n.kt)("li",{parentName:"ul"},"You need to create secrets from targeted k8s clusters in current k8S cluster (see ",(0,n.kt)("a",{parentName:"li",href:"#bootstrap-api-access-to-k8s-cluster-2-from-k8s-cluster-1"},"Bootstrap"),")"),(0,n.kt)("li",{parentName:"ul"},"You may need to create network policies for Multi-Casskop inter-site communications to k8s apis, if using so.")),(0,n.kt)("admonition",{type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"We have only tested the configuration with Calico routable IP pool & external DNS with RFC2136 configuration.")),(0,n.kt)("h4",{id:"bootstrap-api-access-to-k8s-cluster-2-from-k8s-cluster-1"},"Bootstrap API access to k8s-cluster-2 from k8s-cluster-1"),(0,n.kt)("p",null,"Multi-Casskop will be deployed in k8s-cluster-1, change your kubectl context to point to this cluster."),(0,n.kt)("p",null,"In order to allow our Multi-CassKop controller to have access to k8s-cluster-2 from k8s-cluster-1, we are going to use\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/admiraltyio/multicluster-service-account/releases/tag/v0.6.1"},"kubemcsa")," from\n",(0,n.kt)("a",{parentName:"p",href:"https://admiralty.io/"},"Admiralty")," to be able to export secret from k8s-cluster-2 to k8s-cluster1"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"kubemcsa export --context=cluster2 --namespace cassandra-e2e casskop --as k8s-cluster2 | kubectl apply -f -\n")),(0,n.kt)("admonition",{title:"s",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"This will create in current k8s (k8s-cluster-1) the k8s secret associated to the\n",(0,n.kt)("strong",{parentName:"p"},"casskop")," service account of namespace ",(0,n.kt)("strong",{parentName:"p"},"cassandra-e2e")," in k8s-cluster2.\n/!\\ The Secret will be created with the name ",(0,n.kt)("strong",{parentName:"p"},"k8s-cluster2")," and this name must be used when starting Multi-CassKop and\nin the MultiCassKop CRD definition see below")),(0,n.kt)("h4",{id:"install-casskop"},"Install CassKop"),(0,n.kt)("p",null,"CassKop must be deployed on each targeted Kubernetes clusters."),(0,n.kt)("h3",{id:"install-external-dns"},"Install External-DNS"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/kubernetes-sigs/external-dns"},"External-DNS")," must be installed in each Kubernetes clusters.\nConfigure your external DNS with a custom values pointing to your zone and deploy it in your namespace "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-console"},"helm install -f /private/externaldns-values.yaml --name casskop-dns external-dns \n")),(0,n.kt)("h3",{id:"install-multi-casskop"},"Install Multi-CassKop"),(0,n.kt)("p",null,"Proceed with Multi-CassKop installation only when ",(0,n.kt)("a",{parentName:"p",href:"#pre-requisites"},"Pre-requisites")," are fulfilled."),(0,n.kt)("p",null,"Deployment with Helm. Multi-CassKop and CassKop shared the same github/helm repo and semantic version."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"helm install  multi-casskop oci://ghcr.io/cscetbon/multi-casskop-helm --set k8s.local=k8s-cluster1 --set k8s.remote={k8s-cluster2}\n")),(0,n.kt)("p",null,"When starting Multi-CassKop, we need to give some parameters:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"k8s.local is the name of the k8s-cluster we want to refere to when talking to this cluster."),(0,n.kt)("li",{parentName:"ul"},"k8s.remote is a list of other kubernetes we want to connect to.")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Names used there should map with the name used in the MultiCassKop CRD definition)\nthe Names in ",(0,n.kt)("inlineCode",{parentName:"p"},"k8s.remote")," must match the names of the secret exported with the ",(0,n.kt)("a",{parentName:"p",href:"#bootstrap-api-access-to-k8s-cluster-2-from-k8s-cluster-1"},"kubemcsa")," command")),(0,n.kt)("h3",{id:"create-the-multicasskop-crd"},"Create the MultiCassKop CRD"),(0,n.kt)("p",null,"You can deploy a MultiCassKop CRD instance."),(0,n.kt)("p",null,"You can create the Cluster with the following example ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/cscetbon/casskop/tree/master/multi-casskop/config/samples/multi-casskop.yaml"},"multi-casskop/config/samples/multi-casskop.yaml")," file :"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"kubectl apply -f multi-casskop/config/samples/multi-casskop.yaml\n")),(0,n.kt)("p",null,"This is the sequence of operations:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"MultiCassKop first creates the CassandraCluster in k8s-cluster1. "),(0,n.kt)("li",{parentName:"ul"},"Then local CassKop starts to creates the associated Cassandra Cluster.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"When CassKop has created its Cassandra cluster, it updates CassandraCluster object's status with the phase=Running meaning that\nall is ok"))),(0,n.kt)("li",{parentName:"ul"},"Then MultiCassKop start creating the other CassandraCluster in k8s-cluster2"),(0,n.kt)("li",{parentName:"ul"},"Then local CassKop started to creates the associated Cassandra Cluster.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Thanks to the routable seed-list configured with external dns names, Cassandra pods are started by connecting to\nalready existings Cassandra nodes from k8s-cluster1 with the goal to form a uniq Cassandra Ring.")))),(0,n.kt)("p",null,"In resulting, We can see that each clusters have the required pods."),(0,n.kt)("p",null,"If we go in one of the created pods, we can see that nodetool see pods of both clusters:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"cassandra@cassandra-e2e-dc1-rack2-0:/$ nodetool status\nDatacenter: dc1\n===============\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address         Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  10.100.146.150  93.95 KiB  256          49.8%             cfabcef2-3f1b-492d-b028-0621eb672ec7  rack2\nUN  10.100.146.108  108.65 KiB  256          48.3%             d1185b37-af0a-42f9-ac3f-234e541f14f0  rack1\nDatacenter: dc2\n===============\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address         Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  10.100.151.38   69.89 KiB  256          51.4%             ec9003e0-aa53-4150-b4bb-85193d9fa180  rack5\nUN  10.100.150.34   107.89 KiB  256          50.5%             a28c3c59-786f-41b6-8eca-ca7d7d14b6df  rack4\n")))}m.isMDXComponent=!0}}]);