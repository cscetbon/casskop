"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9543],{3451:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>i});var s=a(5893),o=a(1151);const t={title:"Operations Issues",sidebar_label:"Operations Issues"},c=void 0,r={id:"troubleshooting/operations_issues",title:"Operations Issues",description:"Operator can't perform the Action",source:"@site/docs/7_troubleshooting/1_operations_issues.md",sourceDirName:"7_troubleshooting",slug:"/troubleshooting/operations_issues",permalink:"/casskop/docs/troubleshooting/operations_issues",draft:!1,unlisted:!1,editUrl:"https://github.com/cscetbon/casskop/edit/master/website/docs/7_troubleshooting/1_operations_issues.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Operations Issues",sidebar_label:"Operations Issues"},sidebar:"docs",previous:{title:"Cassandra restore",permalink:"/casskop/docs/references/cassandra_restore"},next:{title:"GKE Issues",permalink:"/casskop/docs/troubleshooting/gke_issues"}},d={},i=[{value:"Operator can&#39;t perform the Action",id:"operator-cant-perform-the-action",level:2},{value:"Can&#39;t ScaleUp",id:"cant-scaleup",level:3},{value:"Rollback ScaleUp operation",id:"rollback-scaleup-operation",level:4},{value:"Can&#39;t add new rack in new DC",id:"cant-add-new-rack-in-new-dc",level:3},{value:"Solution1: rollback adding the DC",id:"solution1-rollback-adding-the-dc",level:4},{value:"Solution2: change the topology for dc2 (remove the 3rd unschedulable rack)",id:"solution2-change-the-topology-for-dc2-remove-the-3rd-unschedulable-rack",level:4}];function l(e){const n={blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"operator-cant-perform-the-action",children:"Operator can't perform the Action"}),"\n",(0,s.jsx)(n.p,{children:"If you ask to scale up or add a new DC, or ask for more resources, CassKop will ask Kubernetes to schedule as you\nrequested.\nBut sometimes it is not possible to achieve the change because of a lack of resources (memory/cpus) or because\nconstraints can't be satisfied (Kubernetes nodes with specific labels available...)"}),"\n",(0,s.jsx)(n.p,{children:"CassKop make uses of the PodDisruptionBudget to prevent CassKop to make some change on the CassandraCluster that could\nmake more than 1 Cassandra node at a time."}),"\n",(0,s.jsxs)(n.p,{children:["If you have a Pod stuck in ",(0,s.jsx)(n.strong,{children:"pending"})," state, then you have at least 1 Pod in Disruption, and the PDB object will\nprevent you to make changes on statefulset because that mean that you will have more than 1 Cassandra down at a time."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"$ kubectl get poddisruptionbudgets\nNAME             MIN AVAILABLE   MAX UNAVAILABLE   ALLOWED DISRUPTIONS   AGE\ncassandra-demo   N/A             1                 0                     12m\n"})}),"\n",(0,s.jsx)(n.p,{children:"The Operator logs this line when there is disruption on the Cassandra cluster:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-logs",children:"INFO[3037] Cluster has Disruption on Pods, we wait before applying any change to statefulset  cluster=cassandra-demo dc-rack=dc1-rack1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"cant-scaleup",children:"Can't ScaleUp"}),"\n",(0,s.jsx)(n.p,{children:"In this example I ask a ScaleUp but it can't perform :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"$ kubectl get pods\nNAME                                                              READY   STATUS    RESTARTS   AGE\ncassandra-demo-dc1-rack1-0                                        1/1     Running   0          16h\ncassandra-demo-dc1-rack1-1                                        0/1     Pending   0          12m\ncassandra-demo-dc1-rack2-0                                        1/1     Running   0          16h\ncassandra-demo-dc1-rack3-0                                        1/1     Running   0          16h\n"})}),"\n",(0,s.jsx)(n.p,{children:"the cassandra-demo-dc1-rack1-1 pod is Pending and can't be scheduled."}),"\n",(0,s.jsx)(n.p,{children:"If we looked at the pod status we will see this message :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Warning  FailedScheduling   51s (x17 over 14m)    default-scheduler   0/6 nodes are available: 4 Insufficient cpu, 4 node(s) didn't match node selector.\n"})}),"\n",(0,s.jsx)(n.p,{children:"Kubernetes can't find any Pod with sufficient cpu and matching kubernetes nodes labels we asked in the topology section."}),"\n",(0,s.jsx)(n.p,{children:"To fix this, we can either:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"reduce memory/cpu limits"}),"\n",(0,s.jsx)(n.li,{children:"add more kubernetes nodes that will satisfied our requirements."}),"\n",(0,s.jsx)(n.li,{children:"rollback the scaleUp Operation"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"At this point, CassKop will wait indefinitely to the case to be Fix"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"rollback-scaleup-operation",children:"Rollback ScaleUp operation"}),"\n",(0,s.jsxs)(n.p,{children:["In order to rollback the operation, we need to revert the change on the ",(0,s.jsx)(n.code,{children:"nodesPerRacks"})," parameter."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"This is not sufficient"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Because CassKop is actually performing another action on the cluster (ScaleUp) we can't scheduled a new operation to\nrollback since it has not finished.\nWe introduced a new parameter in the CRD to allow such changes when all the pods can't be scheduled:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Spec.unlockNextOperation: true"})}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:[(0,s.jsxs)(n.strong,{children:["\ud83d\udea9"," Warning"]})," This is not a regular parameter and it must be used with very good care!!."]})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"By adding this parameter in our cluster definition, CassKop will allow to trigger a new operation."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Once CassKop has scheduled the new operation, it will reset this parameter to the default ",(0,s.jsx)(n.code,{children:"false"})," value.\nvalue. If you need more operation, you will need to reset the parameter to force another Operation.\nKeep in mind that CassKop is mean to do only 1 operation at a time."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If this is not already done, you can now rollback the scaleUp updating ",(0,s.jsx)(n.code,{children:"nodesPerRacks: 1"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'WARN[3348] ScaleDown detected on a pending Pod. we don\'t launch decommission  cluster=cassandra-demo pod=cassandra-demo-dc1-rack1-1 rack=dc1-rack1\nINFO[3350] Cluster has 1 Pod Disrupted but that may be normal as we are decommissioning  cluster=cassandra-demo\ndc-rack=dc1-rack1\n...\nINFO[3354] [cassandra-demo][dc1-rack1]: StatefulSet(ScaleDown): Replicas Number OK: ready[1] \nINFO[3354] ScaleDown not yet Completed: Waiting for Pod operation to be Done  cluster=cassandra-demo rack=dc1-rack1\nINFO[3354] Decommission done -> we delete PVC            cluster=cassandra-demo pvc=data-cassandra-demo-dc1-rack1-1 rack=dc1-rack1\nINFO[3354] PVC deleted                                   cluster=cassandra-demo pvc=data-cassandra-demo-dc1-rack1-1 rack=dc1-rack1\nDEBU[3354] Waiting Rack to be running before continuing, we break ReconcileRack Without Updating Statefulset  cluster=cassandra-demo dc-rack=dc1-rack1 err="<nil>"\nINFO[3354] ScaleDown is Done                             cluster=cassandra-demo rack=dc1-rack1\n'})}),"\n",(0,s.jsx)(n.h3,{id:"cant-add-new-rack-in-new-dc",children:"Can't add new rack in new DC"}),"\n",(0,s.jsx)(n.p,{children:"In this example, I ask to add dc called dc2"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"kubectl get pods\nNAME                                                              READY   STATUS    RESTARTS   AGE\ncassandra-demo-dc1-rack1-0                                        1/1     Running   0          17h\ncassandra-demo-dc1-rack2-0                                        1/1     Running   0          17h\ncassandra-demo-dc1-rack3-0                                        1/1     Running   0          17h\ncassandra-demo-dc2-rack1-0                                        1/1     Running   0          5m46s\ncassandra-demo-dc2-rack2-0                                        1/1     Running   0          4m20s\ncassandra-demo-dc2-rack3-0                                        0/1     Pending   0          2m37s\n"})}),"\n",(0,s.jsx)(n.p,{children:"But the last one can't be scheduled because of insufficient cpu on k8s nodes."}),"\n",(0,s.jsx)(n.p,{children:"We can either add the wanted resources in the k8s cluster or make a rollback."}),"\n",(0,s.jsx)(n.h4,{id:"solution1-rollback-adding-the-dc",children:"Solution1: rollback adding the DC"}),"\n",(0,s.jsx)(n.p,{children:"To rollback the add of the new DC, we first need to scale down to 0 for the nodes that already have join the ring.\nWe need to allow disruption as we do in previous section."}),"\n",(0,s.jsx)(n.p,{children:"then We first need to ask the dc2 to scaleDown to 0 because it has already add 2 racks, and we add the\nspec.unlockNextOperation to true."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"...\n  unlockNextOperation: true\n  ...\n    name: dc2\n    nodesPerRacks: 0\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will allow CassKop to make the scale down. because it will start with the first rack, it will free some space and\nthe last pod which was pending will be joining. then it will be decommissioned by CassKop."}),"\n",(0,s.jsx)(n.p,{children:"we can see in CassKop logs when it deal with the rack with unscheduled pods:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"WARN[0667] Aborting Initializing..., start ScaleDown                      cluster=cassandra-demo rack=dc2-rack3\nINFO[0667] The Operator Waits 20 seconds for the action to start correctly  cluster=cassandra-demo rack=dc2-rack3\nWARN[0667] ScaleDown detected on a pending Pod. we don't launch decommission  cluster=cassandra-demo pod=cassandra-demo-dc2-rack3-0 rack=dc2-rack3\nINFO[0667] Cluster has 1 Pod Disrupted but that may be normal as we are decommissioning\ncluster=cassandra-demodc-rack=dc2-rack3\nINFO[0667] Template is different:  {...}\n"})}),"\n",(0,s.jsx)(n.p,{children:"It will also ScaleDown any pods that was part of the new DC."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Once ScaleDown is done, you can delete the DC from the Spec."}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"solution2-change-the-topology-for-dc2-remove-the-3rd-unschedulable-rack",children:"Solution2: change the topology for dc2 (remove the 3rd unschedulable rack)"}),"\n",(0,s.jsx)(n.p,{children:"we get back in the previous section before making the rolling back of adding the dc2."}),"\n",(0,s.jsx)(n.p,{children:"If only one of the Racks can't schedule any pods, we can change the topology to remove the Rack ONLY if there was not already\npods deployed in the Rack. If this is not the case, then you will need to process ScaleDown instead of removing rack."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"    - labels:\n        failure-domain.beta.kubernetes.io/region: europe-west1\n      name: dc2\n      nodesPerRacks: 1\n      config:\n        cassandra-yaml:\n          num_tokens: 256\n      rack:\n      - labels:\n          failure-domain.beta.kubernetes.io/zone: europe-west1-d\n        name: rack1\n      - labels:\n          failure-domain.beta.kubernetes.io/zone: europe-west1-c\n        name: rack2\n      - labels:\n          failure-domain.beta.kubernetes.io/zone: europe-west1-d\n        name: rack3\n"})}),"\n",(0,s.jsx)(n.p,{children:"let's remove the rack3 from dc2."}),"\n",(0,s.jsx)(n.p,{children:"the operator will log :"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"WARN[0347] We asked to remove Rack dc2-rack3 with unschedulable pod  cluster=cassandra-demo\nINFO[0347] [cassandra-demo]: Delete PVC[data-cassandra-demo-dc2-rack3-0] OK \n"})}),"\n",(0,s.jsx)(n.p,{children:"The rack3 (and its statefulset) has been removed, and the associated (empty) pvc deleted"})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>r,a:()=>c});var s=a(7294);const o={},t=s.createContext(o);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);