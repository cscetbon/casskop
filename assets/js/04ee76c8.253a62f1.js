"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[976],{2886:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>l,toc:()=>i});var a=s(5893),t=s(1151);const c={title:"Multi-Casskop on Google Kubernetes Engine",author:"Alexandre Guitton",author_title:"Alexandre Guitton",author_url:"https://github.com/erdrix",author_image_url:"https://avatars0.githubusercontent.com/u/10503351?s=460&u=ea08d802388c79c17655c314296be58814391572&v=4",tags:["gke","casskop","cassandra","external-dns","multi-casskop"]},r=void 0,l={permalink:"/casskop/blog/2020/01/15/multicasskop_gke",editUrl:"https://github.com/cscetbon/casskop/edit/master/website/blog/blog/2020-01-15-multicasskop_gke.md",source:"@site/blog/2020-01-15-multicasskop_gke.md",title:"Multi-Casskop on Google Kubernetes Engine",description:"Pre-requisites",date:"2020-01-15T00:00:00.000Z",formattedDate:"January 15, 2020",tags:[{label:"gke",permalink:"/casskop/blog/tags/gke"},{label:"casskop",permalink:"/casskop/blog/tags/casskop"},{label:"cassandra",permalink:"/casskop/blog/tags/cassandra"},{label:"external-dns",permalink:"/casskop/blog/tags/external-dns"},{label:"multi-casskop",permalink:"/casskop/blog/tags/multi-casskop"}],readingTime:5.64,hasTruncateMarker:!1,authors:[{name:"Alexandre Guitton",title:"Alexandre Guitton",url:"https://github.com/erdrix",imageURL:"https://avatars0.githubusercontent.com/u/10503351?s=460&u=ea08d802388c79c17655c314296be58814391572&v=4"}],frontMatter:{title:"Multi-Casskop on Google Kubernetes Engine",author:"Alexandre Guitton",author_title:"Alexandre Guitton",author_url:"https://github.com/erdrix",author_image_url:"https://avatars0.githubusercontent.com/u/10503351?s=460&u=ea08d802388c79c17655c314296be58814391572&v=4",tags:["gke","casskop","cassandra","external-dns","multi-casskop"]},unlisted:!1,prevItem:{title:"Casskop 0.5.1 - Dynamic sidecars and storage configuration feature",permalink:"/casskop/blog/dynamics_sidecars_storage"}},o={authorsImageUrls:[void 0]},i=[{value:"Pre-requisites",id:"pre-requisites",level:2},{value:"Setup GCP environment",id:"setup-gcp-environment",level:2},{value:"Environment setup",id:"environment-setup",level:3},{value:"Setup base infrastructure",id:"setup-base-infrastructure",level:3},{value:"Master provisionning",id:"master-provisionning",level:4},{value:"Slave provisionning",id:"slave-provisionning",level:4},{value:"Check installation",id:"check-installation",level:3},{value:"Check master configuration",id:"check-master-configuration",level:4},{value:"Check slave configuration",id:"check-slave-configuration",level:4},{value:"Check DNS zone configuration",id:"check-dns-zone-configuration",level:4},{value:"Check Firewall configuration",id:"check-firewall-configuration",level:4},{value:"Check Storage Class",id:"check-storage-class",level:4},{value:"Multi casskop deployment",id:"multi-casskop-deployment",level:2},{value:"Bootstrap API access to Slave from Master",id:"bootstrap-api-access-to-slave-from-master",level:3},{value:"Install Multi-CassKop",id:"install-multi-casskop",level:3},{value:"Create the MultiCasskop CRD",id:"create-the-multicasskop-crd",level:3},{value:"Check multi cluster installation",id:"check-multi-cluster-installation",level:3},{value:"Clean up everything",id:"clean-up-everything",level:2},{value:"Cleaning slave cluster",id:"cleaning-slave-cluster",level:3},{value:"Cleaning master cluster",id:"cleaning-master-cluster",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h2,{id:"pre-requisites",children:"Pre-requisites"}),"\n",(0,a.jsx)(n.p,{children:"User should need :"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://learn.hashicorp.com/terraform/getting-started/install.html",children:"terraform"})," version v0.12.7+"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://kubernetes.io/fr/docs/tasks/tools/install-kubectl",children:"kubectl"})," version v1.13.3+"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://github.com/ahmetb/kubectx",children:"kubectx"})," & kubens"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://helm.sh/docs/intro/using_helm/",children:"Helm"})," version v2.15.1+"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://cloud.google.com/sdk/install?hl=fr",children:"gcloud sdk"})," version 272.0.0+"]}),"\n",(0,a.jsxs)(n.li,{children:["A service account with enough rights (for this example : ",(0,a.jsx)(n.code,{children:"editor"}),")"]}),"\n",(0,a.jsx)(n.li,{children:"Having a DNS zone in google cloud dns."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"setup-gcp-environment",children:"Setup GCP environment"}),"\n",(0,a.jsx)(n.p,{children:"To setup the GCP environment we will use terraform provisionning, to instantiate the following infrastructure :"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["2 GKE clusters :","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["First on europe-west1-b which will be the ",(0,a.jsx)(n.code,{children:"master"})]}),"\n",(0,a.jsxs)(n.li,{children:["Second on europe-west1-c which will be the ",(0,a.jsx)(n.code,{children:"slave"})]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"Firewall rules to allow clusters to communicate"}),"\n",(0,a.jsx)(n.li,{children:"External DNS on each cluster to expose cassandra nodes"}),"\n",(0,a.jsx)(n.li,{children:"Casskop operator on each cluster to focus on multi-casskop usage"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"environment-setup",children:"Environment setup"}),"\n",(0,a.jsx)(n.p,{children:"Start to set variables needed for the instantiation :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ export CASSKOP_WORKSPACE=<path to cassandra-k8s-operateur project>\n$ export PROJECT=<gcp project>\n$ export SERVICE_ACCOUNT_KEY_PATH=<path to service account key>\n$ export NAMESPACE=cassandra-demo\n$ export DNS_ZONE_NAME=external-dns-test-gcp-trycatchlearn-fr     # -> change with your own one\n$ export DNS_NAME=external-dns-test.gcp.trycatchlearn.fr          # -> change with your own one\n$ export MANAGED_ZONE=tracking-pdb                                # -> change with your own one\n"})}),"\n",(0,a.jsx)(n.h3,{id:"setup-base-infrastructure",children:"Setup base infrastructure"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ cd ${CASSKOP_WORKSPACE}/multi-casskop/config/samples/gke/terraform\n$ terraform init\n"})}),"\n",(0,a.jsx)(n.h4,{id:"master-provisionning",children:"Master provisionning"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"MultiCasskop architecture",src:s(1373).Z+"",width:"1091",height:"788"})}),"\n",(0,a.jsx)(n.p,{children:"With the master provisionning, we will deploy firewall and Cloud dns configuration :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ terraform workspace new master\n$ terraform workspace select master\n$ terraform apply \\\n    -var-file="env/master.tfvars" \\\n    -var="service_account_json_file=${SERVICE_ACCOUNT_KEY_PATH}" \\\n    -var="namespace=${NAMESPACE}" \\\n    -var="project=${PROJECT}" \\\n    -var="dns_zone_name=${DNS_ZONE_NAME}" \\\n    -var="dns_name=${DNS_NAME}" \\\n    -var="managed_zone=${MANAGED_ZONE}"\n'})}),"\n",(0,a.jsx)(n.h4,{id:"slave-provisionning",children:"Slave provisionning"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ terraform workspace new slave\n$ terraform workspace select slave\n$ terraform apply \\\n    -var-file="env/slave.tfvars" \\\n    -var="service_account_json_file=${SERVICE_ACCOUNT_KEY_PATH}" \\\n    -var="namespace=${NAMESPACE}" \\\n    -var="project=${PROJECT}" \\\n    -var="dns_zone_name=${DNS_ZONE_NAME}" \\\n    -var="dns_name=${DNS_NAME}" \\\n    -var="managed_zone=${MANAGED_ZONE}"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"check-installation",children:"Check installation"}),"\n",(0,a.jsx)(n.h4,{id:"check-master-configuration",children:"Check master configuration"}),"\n",(0,a.jsx)(n.p,{children:"Now we will check that everything is well deployed in the GKE master cluster :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ gcloud container clusters get-credentials cassandra-europe-west1-b-master --zone europe-west1-b --project ${PROJECT}\n$ kubectl get pods -n ${NAMESPACE}\nNAME                                          READY   STATUS    RESTARTS   AGE\ncasskop-casskop-54c4cfcbcb-b4qxq   1/1     Running   0          4h9m\nexternal-dns-6dd96c985-h76gh                  1/1     Running   0          4h16m\n"})}),"\n",(0,a.jsx)(n.h4,{id:"check-slave-configuration",children:"Check slave configuration"}),"\n",(0,a.jsx)(n.p,{children:"Now we will check that everything is well deployed in the GKE slave cluster :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ gcloud container clusters get-credentials cassandra-europe-west1-c-slave --zone europe-west1-c --project ${PROJECT}\n$ kubectl get pods -n ${NAMESPACE}\nNAME                                          READY   STATUS    RESTARTS   AGE\ncasskop-casskop-54c4cfcbcb-sxjz7   1/1     Running   0          4m56s\nexternal-dns-7f947c5b5b-mq7kg                 1/1     Running   0          5m46s\n"})}),"\n",(0,a.jsx)(n.h4,{id:"check-dns-zone-configuration",children:"Check DNS zone configuration"}),"\n",(0,a.jsx)(n.p,{children:"Make a note of the nameservers that were assigned to your new zone :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ gcloud dns record-sets list \\\n    --zone "${DNS_ZONE_NAME}" \\\n    --name "${DNS_NAME}." \\\n    --type NS\nNAME                                     TYPE  TTL    DATA\nexternal-dns-test.gcp.trycatchlearn.fr.  NS    21600  ns-cloud-e1.googledomains.com.,ns-cloud-e2.googledomains.com.,ns-cloud-e3.googledomains.com.,ns-cloud-e4.googledomains.com.\n'})}),"\n",(0,a.jsx)(n.h4,{id:"check-firewall-configuration",children:"Check Firewall configuration"}),"\n",(0,a.jsx)(n.p,{children:"@TODO : rework firewall source"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ gcloud compute firewall-rules describe gke-cassandra-cluster\nallowed:\n- IPProtocol: udp\n- IPProtocol: tcp\ncreationTimestamp: '2019-12-05T13:31:01.233-08:00'\ndescription: ''\ndirection: INGRESS\ndisabled: false\nid: '8270840333953452538'\nkind: compute#firewall\nlogConfig:\n  enable: false\nname: gke-cassandra-cluster\nnetwork: https://www.googleapis.com/compute/v1/projects/poc-rtc/global/networks/default\npriority: 1000\nselfLink: https://www.googleapis.com/compute/v1/projects/poc-rtc/global/firewalls/gke-cassandra-cluster\nsourceRanges:\n- 0.0.0.0/0\ntargetTags:\n- cassandra-cluster\n"})}),"\n",(0,a.jsx)(n.h4,{id:"check-storage-class",children:"Check Storage Class"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ kubectl get storageclasses.storage.k8s.io \nNAME                 PROVISIONER            AGE\nstandard (default)   kubernetes.io/gce-pd   28m\nstandard-wait        kubernetes.io/gce-pd   24m\n"})}),"\n",(0,a.jsx)(n.h2,{id:"multi-casskop-deployment",children:"Multi casskop deployment"}),"\n",(0,a.jsx)(n.h3,{id:"bootstrap-api-access-to-slave-from-master",children:"Bootstrap API access to Slave from Master"}),"\n",(0,a.jsxs)(n.p,{children:["Multi-Casskop will be deployed in ",(0,a.jsx)(n.code,{children:"master cluster"}),", change your ",(0,a.jsx)(n.code,{children:"kubectl"})," context to point this cluster."]}),"\n",(0,a.jsxs)(n.p,{children:["In order to allow Multi-CassKop controller to have access to ",(0,a.jsx)(n.code,{children:"slave"})," from ",(0,a.jsx)(n.code,{children:"master"}),", we are going to use ",(0,a.jsx)(n.a,{href:"https://github.com/admiraltyio/multicluster-service-account/releases/tag/v0.6.1",children:"kubemcsa"})," from ",(0,a.jsx)(n.a,{href:"https://admiralty.io/",children:"admiralty"})," to be able to export secret from ",(0,a.jsx)(n.code,{children:"slave"})," to ",(0,a.jsx)(n.code,{children:"master"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Install ",(0,a.jsx)(n.code,{children:"kubemcsa"})," :"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ export RELEASE_VERSION=v0.6.1\n$ wget https://github.com/admiraltyio/multicluster-service-account/releases/download/${RELEASE_VERSION}/kubemcsa-linux-amd64\n$ mkdir -p ~/tools/kubemcsa/${RELEASE_VERSION} && mv kubemcsa-linux-amd64 tools/kubemcsa/${RELEASE_VERSION}/kubemcsa\n$ chmod +x ~/tools/kubemcsa/${RELEASE_VERSION}/kubemcsa\n$ sudo ln -sfn  ~/tools/kubemcsa/${RELEASE_VERSION}/kubemcsa /usr/local/bin/kubemcsa\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Generate secret for ",(0,a.jsx)(n.code,{children:"master"})," :"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ kubectx # Switch context on master cluster\nSwitched to context "gke_<Project name>_europe-west1-b_cassandra-europe-west1-b-master".\n$ kubens # Switch context on correct namespace\nContext "gke_<Project name>_europe-west1-b_cassandra-europe-west1-b-master" modified.\nActive namespace is "<Namespace>".\n$ kubemcsa export --context=gke_poc-rtc_europe-west1-c_cassandra-europe-west1-c-slave --namespace ${NAMESPACE} casskop --as gke-slave-west1-c | kubectl apply -f -\nsecret/gke-slave-west1-c created\n'})}),"\n",(0,a.jsx)(n.p,{children:"Check that the secret is correctly created"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ kubectl get secrets -n ${NAMESPACE}\n...\ngke-slave-west1-c                Opaque                                5      28s\n"})}),"\n",(0,a.jsx)(n.h3,{id:"install-multi-casskop",children:"Install Multi-CassKop"}),"\n",(0,a.jsx)(n.p,{children:"@TODO : To correct once the watch object will be fixed"}),"\n",(0,a.jsxs)(n.p,{children:["Add MultiCasskop crd on the ",(0,a.jsx)(n.code,{children:"slave"})," cluster :"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ kubectx # Switch context on slave cluster\nSwitched to context "gke_<Project name>_europe-west1-c_cassandra-europe-west1-c-slave".\n$ kubectl apply -f https://raw.githubusercontent.com/cscetbon/casskop/master/multi-casskop/config/crd/bases/multicluster_v2_cassandramulticluster_crd.yaml\n'})}),"\n",(0,a.jsx)(n.p,{children:"Deployment with Helm :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ kubectx # Switch context on master cluster\nSwitched to context "gke_<Project name>_europe-west1-b_cassandra-europe-west1-b-master".\n$ helm init --client-only\n$ cd ${CASSKOP_WORKSPACE}\n$ helm install --name multi-casskop oci://ghcr.io/cscetbon/multi-casskop-helm --set k8s.local=gke-master-west1-b --set k8s.remote={gke-slave-west1-c} #--no-hooks if crd already install\n'})}),"\n",(0,a.jsx)(n.h3,{id:"create-the-multicasskop-crd",children:"Create the MultiCasskop CRD"}),"\n",(0,a.jsxs)(n.p,{children:["Now we are ready to deploy a MultiCassKop CRD instance.\nWe will use the example in ",(0,a.jsx)(n.code,{children:"multi-casskop/config/samples/gke/multi-casskop-gke.yaml"})," :"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ kubectl apply -f multi-casskop/config/samples/gke/multi-casskop-gke.yaml\n"})}),"\n",(0,a.jsx)(n.h3,{id:"check-multi-cluster-installation",children:"Check multi cluster installation"}),"\n",(0,a.jsx)(n.p,{children:"We can see that each cluster has the required pods :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ kubectx # Switch context on master cluster\nSwitched to context "gke_<Project name>_europe-west1-b_cassandra-europe-west1-b-master".\n$ kubectl get pods -n ${NAMESPACE}\nNAME                                          READY   STATUS    RESTARTS   AGE\ncassandra-demo-dc1-rack1-0                    1/1     Running   0          8m30s\ncasskop-casskop-54c4cfcbcb-8qncr   1/1     Running   0          34m\nexternal-dns-6dd96c985-7jf6w                  1/1     Running   0          35m\nmulti-casskop-67dc74dff7-z4642                1/1     Running   0          11m\n$ kubectx # Switch context on slave cluster\nSwitched to context "gke_<Project name>_europe-west1-c_cassandra-europe-west1-c-slave".\n$ kubectl get pods -n ${NAMESPACE}\nNAME                                          READY   STATUS    RESTARTS   AGE\ncassandra-demo-dc3-rack3-0                    1/1     Running   0          6m55s\ncassandra-demo-dc4-rack4-0                    1/1     Running   0          4m59s\ncassandra-demo-dc4-rack4-1                    1/1     Running   0          3m20s\ncasskop-casskop-54c4cfcbcb-sxjz7   1/1     Running   0          71m\nexternal-dns-7f947c5b5b-mq7kg                 1/1     Running   0          72m\n'})}),"\n",(0,a.jsx)(n.p,{children:"If we go in one of the created pods, we can see that nodetool see pods of both clusters :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ kubectx # Switch context on master cluster\nSwitched to context "gke_<Project name>_europe-west1-b_cassandra-europe-west1-b-master".\n$ kubectl exec -ti cassandra-demo-dc1-rack1-0 nodetool status\nDatacenter: dc1\n===============\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address    Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  10.52.2.3  108.62 KiB  256          49.2%             a0958905-e1fa-4410-baca-fc86f4457f1a  rack1\nDatacenter: dc3\n===============\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address    Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  10.8.3.2   74.95 KiB  256          51.5%             03f8eede-4b69-43be-a0c1-73f73470398b  rack3\nDatacenter: dc4\n===============\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address    Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  10.8.4.3   107.87 KiB  256          47.8%             1a7432e2-4ca8-4767-acdb-3b40e6ff4a57  rack4\nUN  10.8.2.5   107.85 KiB  256          51.6%             272037ce-4146-42c1-9079-ef4561249254  rack4\n'})}),"\n",(0,a.jsx)(n.h2,{id:"clean-up-everything",children:"Clean up everything"}),"\n",(0,a.jsxs)(n.p,{children:["If you have set the ",(0,a.jsx)(n.code,{children:"deleteCassandraCluster"})," to true, then when deleting the ",(0,a.jsx)(n.code,{children:"MultiCassKop"})," object, it will cascade the deletion of the CassandraCluster object in the targeted k8s clusters. Then each local CassKop will delete their Cassandra clusters (else skip this step)"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:"$ kubectl delete multicasskops.db.orange.com multi-casskop-demo\n$ helm del --purge multi-casskop\n"})}),"\n",(0,a.jsx)(n.h3,{id:"cleaning-slave-cluster",children:"Cleaning slave cluster"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ cd ${CASSKOP_WORKSPACE}/multi-casskop/config/samples/gke/terraform\n$ terraform workspace select slave\n$ terraform destroy \\\n    -var-file="env/slave.tfvars" \\\n    -var="service_account_json_file=${SERVICE_ACCOUNT_KEY_PATH}" \\\n    -var="namespace=${NAMESPACE}" \\\n    -var="project=${PROJECT}" \\\n    -var="dns_zone_name=${DNS_ZONE_NAME}" \\\n    -var="dns_name=${DNS_NAME}" \\\n    -var="managed_zone=${MANAGED_ZONE}"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"cleaning-master-cluster",children:"Cleaning master cluster"}),"\n",(0,a.jsx)(n.p,{children:"Before running the following command, you need to clean dns records set."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sh",children:'$ terraform workspace select master\n$ terraform destroy \\\n    -var-file="env/master.tfvars" \\\n    -var="service_account_json_file=${SERVICE_ACCOUNT_KEY_PATH}" \\\n    -var="namespace=${NAMESPACE}" \\\n    -var="project=${PROJECT}" \\\n    -var="dns_zone_name=${DNS_ZONE_NAME}" \\\n    -var="dns_name=${DNS_NAME}" \\\n    -var="managed_zone=${MANAGED_ZONE}"\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1373:(e,n,s)=>{s.d(n,{Z:()=>a});const a=s.p+"assets/images/multicasskop_architecture-4ab1ea0d34c7b749dfd848259c6bab1c.jpeg"},1151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>r});var a=s(7294);const t={},c=a.createContext(t);function r(e){const n=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(c.Provider,{value:n},e.children)}}}]);