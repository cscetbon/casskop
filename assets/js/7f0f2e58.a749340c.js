"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9718],{4088:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"setup/multi_casskop","title":"Multi-CassKop","description":"MultiCasskop","source":"@site/docs/2_setup/3_multi_casskop.md","sourceDirName":"2_setup","slug":"/setup/multi_casskop","permalink":"/casskop/docs/setup/multi_casskop","draft":false,"unlisted":false,"editUrl":"https://github.com/cscetbon/casskop/edit/master/website/docs/2_setup/3_multi_casskop.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Multi-CassKop","sidebar_label":"Multi-CassKop"},"sidebar":"docs","previous":{"title":"Install Plugin","permalink":"/casskop/docs/setup/install_plugin"},"next":{"title":"Google Kubernetes Engine","permalink":"/casskop/docs/setup/platform_setup/gke"}}');var a=t(4848),l=t(8453);const i={title:"Multi-CassKop",sidebar_label:"Multi-CassKop"},r=void 0,o={},c=[{value:"MultiCasskop",id:"multicasskop",level:2},{value:"Pre-requisite",id:"pre-requisite",level:3},{value:"Bootstrap API access to k8s-cluster-2 from k8s-cluster-1",id:"bootstrap-api-access-to-k8s-cluster-2-from-k8s-cluster-1",level:4},{value:"Install CassKop",id:"install-casskop",level:4},{value:"Install External-DNS",id:"install-external-dns",level:3},{value:"Install Multi-CassKop",id:"install-multi-casskop",level:3},{value:"Create the MultiCassKop CRD",id:"create-the-multicasskop-crd",level:3}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h2,{id:"multicasskop",children:"MultiCasskop"}),"\n",(0,a.jsx)(s.h3,{id:"pre-requisite",children:"Pre-requisite"}),"\n",(0,a.jsx)(s.p,{children:"In order to have a working Multi-CassKop operator we need to have at least 2 k8s clusters: k8s-cluster-1 and k8s-cluster-2"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"k8s >=v1.15 installed on each site, with kubectl configure to access both of thems"}),"\n",(0,a.jsxs)(s.li,{children:["The pods of each site must be able to reach pods on other sites, this is outside of the scope of Multi-Casskop and can\nbe achieve by different solutions such as:","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["in our on-premise cluster, we leverage ",(0,a.jsx)(s.a,{href:"https://www.projectcalico.org/why-bgp/",children:"Calico"})," routable IP pool in order to make this possible"]}),"\n",(0,a.jsx)(s.li,{children:"this can also be done using mesh service such as istio"}),"\n",(0,a.jsx)(s.li,{children:"there may be other solutions as well"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["having CassKop installed (with its ConfigMap) in each namespace see ",(0,a.jsx)(s.a,{href:"#casskop",children:"CassKop installation"})]}),"\n",(0,a.jsxs)(s.li,{children:["having ",(0,a.jsx)(s.a,{href:"https://github.com/kubernetes-sigs/external-dns",children:"External-DNS"})," with RFC2136 installed in each namespace to\nmanage your DNS sub zone. see ",(0,a.jsx)(s.a,{href:"#install-external-dns",children:"Install external dns"})]}),"\n",(0,a.jsxs)(s.li,{children:["You need to create secrets from targeted k8s clusters in current k8S cluster (see ",(0,a.jsx)(s.a,{href:"#bootstrap-api-access-to-k8s-cluster-2-from-k8s-cluster-1",children:"Bootstrap"}),")"]}),"\n",(0,a.jsx)(s.li,{children:"You may need to create network policies for Multi-Casskop inter-site communications to k8s apis, if using so."}),"\n"]}),"\n",(0,a.jsx)(s.admonition,{type:"warning",children:(0,a.jsx)(s.p,{children:"We have only tested the configuration with Calico routable IP pool & external DNS with RFC2136 configuration."})}),"\n",(0,a.jsx)(s.h4,{id:"bootstrap-api-access-to-k8s-cluster-2-from-k8s-cluster-1",children:"Bootstrap API access to k8s-cluster-2 from k8s-cluster-1"}),"\n",(0,a.jsx)(s.p,{children:"Multi-Casskop will be deployed in k8s-cluster-1, change your kubectl context to point to this cluster."}),"\n",(0,a.jsxs)(s.p,{children:["In order to allow our Multi-CassKop controller to have access to k8s-cluster-2 from k8s-cluster-1, we are going to use\n",(0,a.jsx)(s.a,{href:"https://github.com/admiraltyio/multicluster-service-account/releases/tag/v0.6.1",children:"kubemcsa"})," from\n",(0,a.jsx)(s.a,{href:"https://admiralty.io/",children:"Admiralty"})," to be able to export secret from k8s-cluster-2 to k8s-cluster1"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-sh",children:"kubemcsa export --context=cluster2 --namespace cassandra-e2e casskop --as k8s-cluster2 | kubectl apply -f -\n"})}),"\n",(0,a.jsx)(s.admonition,{type:"tip",children:(0,a.jsxs)(s.p,{children:["This will create in current k8s (k8s-cluster-1) the k8s secret associated to the\n",(0,a.jsx)(s.strong,{children:"casskop"})," service account of namespace ",(0,a.jsx)(s.strong,{children:"cassandra-e2e"})," in k8s-cluster2.\n/!\\ The Secret will be created with the name ",(0,a.jsx)(s.strong,{children:"k8s-cluster2"})," and this name must be used when starting Multi-CassKop and\nin the MultiCassKop CRD definition see below"]})}),"\n",(0,a.jsx)(s.h4,{id:"install-casskop",children:"Install CassKop"}),"\n",(0,a.jsx)(s.p,{children:"CassKop must be deployed on each targeted Kubernetes clusters."}),"\n",(0,a.jsx)(s.h3,{id:"install-external-dns",children:"Install External-DNS"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"https://github.com/kubernetes-sigs/external-dns",children:"External-DNS"})," must be installed in each Kubernetes clusters.\nConfigure your external DNS with a custom values pointing to your zone and deploy it in your namespace"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-console",children:"helm install -f /private/externaldns-values.yaml --name casskop-dns external-dns \n"})}),"\n",(0,a.jsx)(s.h3,{id:"install-multi-casskop",children:"Install Multi-CassKop"}),"\n",(0,a.jsxs)(s.p,{children:["Proceed with Multi-CassKop installation only when ",(0,a.jsx)(s.a,{href:"#pre-requisites",children:"Pre-requisites"})," are fulfilled."]}),"\n",(0,a.jsx)(s.p,{children:"Deployment with Helm. Multi-CassKop and CassKop shared the same github/helm repo and semantic version."}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"helm install  multi-casskop oci://ghcr.io/cscetbon/multi-casskop-helm --set k8s.local=k8s-cluster1 --set k8s.remote={k8s-cluster2}\n"})}),"\n",(0,a.jsx)(s.p,{children:"When starting Multi-CassKop, we need to give some parameters:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"k8s.local is the name of the k8s-cluster we want to refere to when talking to this cluster."}),"\n",(0,a.jsx)(s.li,{children:"k8s.remote is a list of other kubernetes we want to connect to."}),"\n"]}),"\n",(0,a.jsx)(s.admonition,{type:"info",children:(0,a.jsxs)(s.p,{children:["Names used there should map with the name used in the MultiCassKop CRD definition)\nthe Names in ",(0,a.jsx)(s.code,{children:"k8s.remote"})," must match the names of the secret exported with the ",(0,a.jsx)(s.a,{href:"#bootstrap-api-access-to-k8s-cluster-2-from-k8s-cluster-1",children:"kubemcsa"})," command"]})}),"\n",(0,a.jsx)(s.h3,{id:"create-the-multicasskop-crd",children:"Create the MultiCassKop CRD"}),"\n",(0,a.jsx)(s.p,{children:"You can deploy a MultiCassKop CRD instance."}),"\n",(0,a.jsxs)(s.p,{children:["You can create the Cluster with the following example ",(0,a.jsx)(s.a,{href:"https://github.com/cscetbon/casskop/tree/master/multi-casskop/config/samples/multi-casskop.yaml",children:"multi-casskop/config/samples/multi-casskop.yaml"})," file :"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"kubectl apply -f multi-casskop/config/samples/multi-casskop.yaml\n"})}),"\n",(0,a.jsx)(s.p,{children:"This is the sequence of operations:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"MultiCassKop first creates the CassandraCluster in k8s-cluster1."}),"\n",(0,a.jsxs)(s.li,{children:["Then local CassKop starts to creates the associated Cassandra Cluster.","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"When CassKop has created its Cassandra cluster, it updates CassandraCluster object's status with the phase=Running meaning that\nall is ok"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.li,{children:"Then MultiCassKop start creating the other CassandraCluster in k8s-cluster2"}),"\n",(0,a.jsxs)(s.li,{children:["Then local CassKop started to creates the associated Cassandra Cluster.","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Thanks to the routable seed-list configured with external dns names, Cassandra pods are started by connecting to\nalready existings Cassandra nodes from k8s-cluster1 with the goal to form a uniq Cassandra Ring."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"In resulting, We can see that each clusters have the required pods."}),"\n",(0,a.jsx)(s.p,{children:"If we go in one of the created pods, we can see that nodetool see pods of both clusters:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"cassandra@cassandra-e2e-dc1-rack2-0:/$ nodetool status\nDatacenter: dc1\n===============\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address         Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  10.100.146.150  93.95 KiB  256          49.8%             cfabcef2-3f1b-492d-b028-0621eb672ec7  rack2\nUN  10.100.146.108  108.65 KiB  256          48.3%             d1185b37-af0a-42f9-ac3f-234e541f14f0  rack1\nDatacenter: dc2\n===============\nStatus=Up/Down\n|/ State=Normal/Leaving/Joining/Moving\n--  Address         Load       Tokens       Owns (effective)  Host ID                               Rack\nUN  10.100.151.38   69.89 KiB  256          51.4%             ec9003e0-aa53-4150-b4bb-85193d9fa180  rack5\nUN  10.100.150.34   107.89 KiB  256          50.5%             a28c3c59-786f-41b6-8eca-ca7d7d14b6df  rack4\n"})})]})}function u(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>r});var n=t(6540);const a={},l=n.createContext(a);function i(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);