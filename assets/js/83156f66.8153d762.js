"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1226],{8679:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"references/topology","title":"Topology","description":"Topology","source":"@site/docs/6_references/2_topology.md","sourceDirName":"6_references","slug":"/references/topology","permalink":"/casskop/docs/references/topology","draft":false,"unlisted":false,"editUrl":"https://github.com/cscetbon/casskop/edit/master/website/docs/6_references/2_topology.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Topology","sidebar_label":"Topology"},"sidebar":"docs","previous":{"title":"Cassandra cluster","permalink":"/casskop/docs/references/cassandra_cluster"},"next":{"title":"Cassandra cluster Status","permalink":"/casskop/docs/references/cassandra_cluster_status"}}');var d=t(4848),n=t(8453);const i={title:"Topology",sidebar_label:"Topology"},c=void 0,l={},o=[{value:"Topology",id:"topology",level:2},{value:"DC",id:"dc",level:2},{value:"Rack",id:"rack",level:2}];function a(e){const s={a:"a",h2:"h2",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.h2,{id:"topology",children:"Topology"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Field"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"}),(0,d.jsx)(s.th,{children:"Required"}),(0,d.jsx)(s.th,{children:"Default"})]})}),(0,d.jsx)(s.tbody,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"dc"}),(0,d.jsxs)(s.td,{children:["[ ]",(0,d.jsx)(s.a,{href:"#dc",children:"DC"})]}),(0,d.jsx)(s.td,{children:"List of DC defined in the CassandraCluster."}),(0,d.jsx)(s.td,{children:"Yes"}),(0,d.jsx)(s.td,{children:"-"})]})})]}),"\n",(0,d.jsx)(s.h2,{id:"dc",children:"DC"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Field"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"}),(0,d.jsx)(s.th,{children:"Required"}),(0,d.jsx)(s.th,{children:"Default"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"name"}),(0,d.jsx)(s.td,{children:"string"}),(0,d.jsx)(s.td,{children:"Name of the DC"}),(0,d.jsx)(s.td,{children:"Yes"}),(0,d.jsx)(s.td,{children:"dc1"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"labels"}),(0,d.jsx)(s.td,{children:"map[string]string"}),(0,d.jsx)(s.td,{children:"Labels used to target Kubernetes nodes"}),(0,d.jsx)(s.td,{children:"No"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"rack"}),(0,d.jsxs)(s.td,{children:["[ ]",(0,d.jsx)(s.a,{href:"#rack",children:"Rack"})]}),(0,d.jsx)(s.td,{children:"List of Racks defined in the Cassandra DC"}),(0,d.jsx)(s.td,{children:"Yes"}),(0,d.jsx)(s.td,{children:"-"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"config"}),(0,d.jsx)(s.td,{children:"map"}),(0,d.jsx)(s.td,{children:"Configuration used by the config builder to generated cassandra.yaml and other configuration files"}),(0,d.jsx)(s.td,{children:"No"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"nodesPerRacks"}),(0,d.jsx)(s.td,{children:"int32"}),(0,d.jsx)(s.td,{children:"Number of nodes to deploy for a Cassandra deployment in each Racks."}),(0,d.jsxs)(s.td,{children:["Optional, if not filled, used value define in ",(0,d.jsx)(s.a,{href:"/casskop/docs/references/cassandra_cluster#cassandraclusterspec",children:"CassandraClusterSpec"})]}),(0,d.jsx)(s.td,{children:"1"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"dataCapacity"}),(0,d.jsx)(s.td,{children:"string"}),(0,d.jsxs)(s.td,{children:["Define the Capacity for Persistent Volume Claims in the local storage. ",(0,d.jsx)(s.a,{href:"/casskop/docs/configuration_deployment/storage#configuration",children:"Check documentation for more informations"})]}),(0,d.jsxs)(s.td,{children:["Optional, if not filled, used value define in ",(0,d.jsx)(s.a,{href:"/casskop/docs/references/cassandra_cluster#cassandraclusterspec",children:"CassandraClusterSpec"})]}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"dataStorageClass"}),(0,d.jsx)(s.td,{children:"string"}),(0,d.jsxs)(s.td,{children:["Define StorageClass for Persistent Volume Claims in the local storage. ",(0,d.jsx)(s.a,{href:"/casskop/docs/configuration_deployment/storage#configuration",children:"Check documentation for more informations"})]}),(0,d.jsxs)(s.td,{children:["Optional, if not filled, used value define in ",(0,d.jsx)(s.a,{href:"/casskop/docs/references/cassandra_cluster#cassandraclusterspec",children:"CassandraClusterSpec"})]}),(0,d.jsx)(s.td,{})]})]})]}),"\n",(0,d.jsx)(s.h2,{id:"rack",children:"Rack"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Field"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Description"}),(0,d.jsx)(s.th,{children:"Required"}),(0,d.jsx)(s.th,{children:"Default"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"name"}),(0,d.jsx)(s.td,{children:"string"}),(0,d.jsx)(s.td,{children:"Name of the Rack"}),(0,d.jsx)(s.td,{children:"Yes"}),(0,d.jsx)(s.td,{children:"rack1"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"labels"}),(0,d.jsx)(s.td,{children:"map[string]string"}),(0,d.jsx)(s.td,{children:"Labels used to target Kubernetes nodes"}),(0,d.jsx)(s.td,{children:"No"}),(0,d.jsx)(s.td,{children:"-"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"config"}),(0,d.jsx)(s.td,{children:"map"}),(0,d.jsx)(s.td,{children:"Configuration used by the config builder to generated cassandra.yaml and other configuration files"}),(0,d.jsx)(s.td,{children:"No"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"rollingRestart"}),(0,d.jsx)(s.td,{children:"bool"}),(0,d.jsx)(s.td,{children:"Flag to tell the operator to trigger a rolling restart of the Rack"}),(0,d.jsx)(s.td,{children:"Yes"}),(0,d.jsx)(s.td,{children:"false"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"rollingPartition"}),(0,d.jsx)(s.td,{children:"int32"}),(0,d.jsx)(s.td,{children:"The Partition to control the Statefulset Upgrade"}),(0,d.jsx)(s.td,{children:"Yes"}),(0,d.jsx)(s.td,{children:"0"})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>c});var r=t(6540);const d={},n=r.createContext(d);function i(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);