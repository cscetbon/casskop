"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5542],{7036:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"configuration_deployment/sidecars","title":"Sidecars","description":"For extra needs not covered by the defaults container managed through the CassandraCluster CRD, we are allowing you to define your own sidecars which will be deployed into the cassandra node pods.","source":"@site/docs/3_configuration_deployment/5_sidecars.md","sourceDirName":"3_configuration_deployment","slug":"/configuration_deployment/sidecars","permalink":"/casskop/docs/configuration_deployment/sidecars","draft":false,"unlisted":false,"editUrl":"https://github.com/cscetbon/casskop/edit/master/website/docs/3_configuration_deployment/5_sidecars.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Sidecars","sidebar_label":"Sidecars"},"sidebar":"docs","previous":{"title":"Cassandra Configuration","permalink":"/casskop/docs/configuration_deployment/cassandra_configuration"},"next":{"title":"Advanced Configuration","permalink":"/casskop/docs/configuration_deployment/advanced_configuration"}}');var i=a(4848),o=a(8453);const r={title:"Sidecars",sidebar_label:"Sidecars"},t=void 0,c={},l=[];function d(e){const n={admonition:"admonition",code:"code",em:"em",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["For extra needs not covered by the defaults container managed through the CassandraCluster CRD, we are allowing you to define your own sidecars which will be deployed into the cassandra node pods.\nTo do this, you will configure the ",(0,i.jsx)(n.code,{children:"SidecarConfigs"})," property in ",(0,i.jsx)(n.code,{children:"CassandraCluster.Spec"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"CassandraCluster fragment for dynamic sidecars definition :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# ...\n  sidecarConfigs:\n    - args: ["tail", "-F", "/var/log/cassandra/system.log"]\n      image: ez123/alpine-tini\n      imagePullPolicy: Always\n      name: cassandra-log\n      resources:\n        limits:\n          cpu: 50m\n          memory: 50Mi\n        requests:\n          cpu: 10m\n          memory: 10Mi\n      volumeMounts:\n        - mountPath: /var/log/cassandra\n          name: cassandra-logs\n    - args: ["tail", "-F", "/var/log/cassandra/gc.log.0.current"]\n      image: ez123/alpine-tini\n      imagePullPolicy: Always\n      name: gc-log\n      resources:\n        limits:\n          cpu: 50m\n          memory: 50Mi\n        requests:\n          cpu: 10m\n          memory: 10Mi\n      volumeMounts:\n        - mountPath: /var/log/cassandra\n          name: gc-logs\n# ...\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"sidecarConfigs"})," ",(0,i.jsx)(n.em,{children:"(required)"})," : Defines the list of container config object, which will be added into each pod of cassandra node, it requires a list of kubernetes Container spec."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["With the above configuration, the following configuration will be added to the ",(0,i.jsx)(n.code,{children:"rack statefulset"})," definition :"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:'# ...\n#   ...\n  containers:\n    - args: ["tail", "-F", "/var/log/cassandra/system.log"]\n      image: ez123/alpine-tini\n      imagePullPolicy: Always\n      name: cassandra-log\n      resources:\n        limits:\n          cpu: 50m\n          memory: 50Mi\n        requests:\n          cpu: 10m\n          memory: 10Mi\n      volumeMounts:\n        - mountPath: /var/log/cassandra\n          name: cassandra-logs\n    - args: ["tail", "-F", "/var/log/cassandra/gc.log.0.current"]\n      image: ez123/alpine-tini\n      imagePullPolicy: Always\n      name: gc-log\n      resources:\n        limits:\n          cpu: 50m\n          memory: 50Mi\n        requests:\n          cpu: 10m\n          memory: 10Mi\n      volumeMounts:\n        - mountPath: /var/log/cassandra\n          name: gc-logs\n#   ...\n# ...\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"Note that all sidecars added with this configuration will have some of the environment variables from cassandra container merged with those defined into the sidecar container\nfor example :"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CASSANDRA_CLUSTER_NAME"}),"\n",(0,i.jsx)(n.li,{children:"CASSANDRA_SEEDS"}),"\n",(0,i.jsx)(n.li,{children:"CASSANDRA_DC"}),"\n",(0,i.jsx)(n.li,{children:"CASSANDRA_RACK"}),"\n"]})]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>t});var s=a(6540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);